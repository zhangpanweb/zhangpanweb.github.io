{"data":{"markdownRemark":{"html":"<p>安装</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint --save-dev</code></pre></div>\n<p>初始化</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">./node_modules/.bin/eslint --init</code></pre></div>\n<p>执行上述命令，命令行会让你回答一下问题，包括项目的运行环境、框架等，回答后，会生成一个默认配置文件</p>\n<hr>\n<h4>parserOptions</h4>\n<p>指定eslint能够识别的语法，配置解析选项能够帮助eslint判断什么属于解析错误。默认情况下，eslint能够识别<code class=\"language-text\">es5</code>和<code class=\"language-text\">jsx</code>的语法，可以通过设置<code class=\"language-text\">parserOptions</code>选项覆盖这些默认配置。<code class=\"language-text\">parserOptions</code>的可配置项：</p>\n<ul>\n<li>ecmaVersion：希望能够识别的<code class=\"language-text\">ECMAScript</code>语法版本。指定版本即可，比如对于<code class=\"language-text\">es6</code>，设置此值为<code class=\"language-text\">6</code>或<code class=\"language-text\">2015</code>，其他版本依次类推。</li>\n<li>sourceType：默认为<code class=\"language-text\">script</code>，可设置为<code class=\"language-text\">module</code>。若设置为<code class=\"language-text\">script</code>，则无法在文件中使用<code class=\"language-text\">import</code>等。</li>\n<li>\n<p>ecmaFeatures：指定其他可用的语言功能，可配置值：</p>\n<ul>\n<li>globalReturn：是否允许在全局作用域中使用<code class=\"language-text\">return</code>语句</li>\n<li>impliedStrict：是否开启全局的严格模式（在<code class=\"language-text\">es5</code>及更高版本可用）</li>\n<li>jsx：开启<code class=\"language-text\">jsx</code></li>\n</ul>\n</li>\n</ul>\n<h5>需要注意的点</h5>\n<ul>\n<li>设置<code class=\"language-text\">ecmaVersion</code>为<code class=\"language-text\">es6</code>，可以让eslint识别<code class=\"language-text\">es6</code>的语法，但是它并不代表eslint能够识别<code class=\"language-text\">es6</code>中类似于<code class=\"language-text\">Set</code>这些新的<code class=\"language-text\">esmaScript</code>全局变量。需要配合设置<code class=\"language-text\">{env:{es6:true}}</code>使eslint识别这些全局变量。只设置<code class=\"language-text\">ecmaVersion</code>为<code class=\"language-text\">es6</code>，在使用<code class=\"language-text\">Set</code>等全局变量时，会遇到<code class=\"language-text\">no-undef</code>的eslint报错。只设置<code class=\"language-text\">{env:{es6:true}}</code>但是<code class=\"language-text\">ecmaVersion</code>小于<code class=\"language-text\">6</code>，则无法使用<code class=\"language-text\">const</code>等语法，会遇到eslint<code class=\"language-text\">parser error</code>的错误。</li>\n<li>设置<code class=\"language-text\">jsx</code>为<code class=\"language-text\">true</code>后，能够识别<code class=\"language-text\">jsx</code>不代表能够识别React，React使用了一些eslint无法识别的<code class=\"language-text\">jsx</code>语法。若要使用<code class=\"language-text\">React</code>，可以使用<a href=\"https://github.com/yannickcr/eslint-plugin-react\"><code class=\"language-text\">eslint-plugin-react</code></a></li>\n</ul>\n<hr>\n<h4>parser</h4>\n<p>默认情况下，eslint使用<a href=\"https://github.com/eslint/espree\"><code class=\"language-text\">Espree</code></a>作为解析器，但是可以自行通过<code class=\"language-text\">parser</code>字段设置解析器。详情可见<a href=\"https://eslint.org/docs/user-guide/configuring#specifying-parser\"><code class=\"language-text\">eslint官网parser配置项</code></a></p>\n<hr>\n<h4>env</h4>\n<p><code class=\"language-text\">env</code>配置项指定了项目需要运行的环境，eslint根据env判断，哪些全局变量是可用的哪些是不可用的。比如设置了<code class=\"language-text\">node:true</code>后，<code class=\"language-text\">__dirname</code>变得可用，不然会报<code class=\"language-text\">no-undef</code>错误。</p>\n<ul>\n<li>常用配置项有：<code class=\"language-text\">node</code>、<code class=\"language-text\">browser</code>、<code class=\"language-text\">es6</code>、<code class=\"language-text\">mocha</code>等，所有列表可见<a href=\"https://eslint.org/docs/user-guide/configuring#specifying-environments\"><code class=\"language-text\">eslint</code>官网配置项</a></li>\n<li>可以同时指定多个环境</li>\n<li>可以通过配置文件指定，也可以通过文件注释的方式指定，如下</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-env node, mocha */</span></code></pre></div>\n<ul>\n<li>除了可以使用上面<code class=\"language-text\">node</code>这些已提前设置好的配置项外，也可以通过<code class=\"language-text\">plugins</code>的方式引入环境，如下，指定<code class=\"language-text\">plugins</code>，然后在<code class=\"language-text\">env</code>中通过<code class=\"language-text\">plugins/xx</code>的方式引入。</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"example\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"example/custom\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h4>global</h4>\n<p>在通过<code class=\"language-text\">env</code>设置一部分变量后，可能仍然有部分是用户需要的全局变量，此时若不进行配置，也会报<code class=\"language-text\">no-undef</code>的错误，所以需要通过<code class=\"language-text\">global</code>的配置项告诉eslint这些变量是全局变量。</p>\n<ul>\n<li>globa不仅可以告诉eslint哪些变量是全局变量，也可以告诉eslint这些全局变量是否可以变更，配置方式如下</li>\n<li>可以通过文件注释的方式进行配置</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* global var1, var2 */</span>\n\n<span class=\"token comment\">/* global var1:writable, var2:writable *</span></code></pre></div>\n<ul>\n<li>也可以通过配置文件的方式进行配置</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"globals\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"var1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"writable\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"var2\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"readonly\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>开启<a href=\"https://eslint.org/docs/rules/no-global-assign\">no-global-assign</a>规则可以使eslint检测用户是否有给不允许重写的全局变量赋值，若有此行为，则会进行报错</li>\n</ul>\n<hr>\n<h4>plugins</h4>\n<p>eslint可以使用第三方插件，通过<code class=\"language-text\">npm</code>下载后，在配置文件中的<code class=\"language-text\">plugins</code>字段进行配置即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"plugin1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"eslint-plugin-plugin2\"</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>由于<code class=\"language-text\">Node</code>的<code class=\"language-text\">require</code>函数的特性，全局安装的eslint只能使用全局安装的插件，本地安装的eslint只能使用本地安装的插件。</p>\n<hr>\n<h4>rules</h4>\n<p>eslint有很多<code class=\"language-text\">rules</code>，每条规则可以被赋值为<code class=\"language-text\">off</code>(或0)、<code class=\"language-text\">warn</code>(或1)，<code class=\"language-text\">error</code>(或2)。</p>\n<ul>\n<li>文件注释的方式配置</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint eqeqeq: 0, curly: 2 */</span>\n\n若规则有更多配置项时，可以使用数组的方式：\n<span class=\"token comment\">/* eslint quotes: [\"error\", \"double\"], curly: 2 */</span></code></pre></div>\n<ul>\n<li>配置文件的方式</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"eqeqeq\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"off\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"curly\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"quotes\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"double\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>配置插件提供的规则。此时记得去掉插件的<code class=\"language-text\">eslint-plugin</code>前缀，eslint会使用不加前缀的名称去匹配</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint \"plugin1/rule1\": \"error\" */</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"plugin1\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"plugin1/rule1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"error\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h4>特定情况禁用eslint</h4>\n<ul>\n<li>使用注释的方式禁用</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* eslint-disable */</span>\n\n<span class=\"token comment\">/* eslint-disable no-alert, no-console */</span>\n\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// eslint-disable-line</span></code></pre></div>\n<hr>\n<h4>overrides</h4>\n<p>使用<code class=\"language-text\">override</code>字段可以对特定文件使用特定规则。具体的文件路径解析规则等可以参见<a href=\"https://eslint.org/docs/user-guide/configuring#configuration-based-on-glob-patterns\"><code class=\"language-text\">configuration-based-on-glob-patterns</code></a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"overrides\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"files\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"*-test.js\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"*.spec.js\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"no-unused-expressions\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"off\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h4>配置的层叠</h4>\n<ul>\n<li>eslint配置的优先级： 内联文件注释配置 > 命令行配置 >本文件夹中的配置文件 > 父文件夹中的配置文件 > 跟文件夹中的<code class=\"language-text\">.eslint.*</code>配置文件 > 根文件夹中<code class=\"language-text\">package.json</code>中<code class=\"language-text\">eslintConfig</code>字段中的配置</li>\n<li>若配置冲突，优先级高的配置覆盖优先级低的配置</li>\n<li>一般来说，eslint会去寻找配置文件，直到文件系统的根目录，这会导致一些意想不到的问题（全局eslint配置可能会意外影响到本地文件夹），设置<code class=\"language-text\">root:true</code>会使eslint停止向上查找</li>\n</ul>\n<hr>\n<h4>配置的继承</h4>\n<h5>继承规则</h5>\n<ul>\n<li>使用<code class=\"language-text\">extends</code>字段，配置可以继承一些已有的配置</li>\n<li><code class=\"language-text\">extends</code>字段可以被指定为代表某个配置的字符串，或一个数组，数组中，每个后面的配置继承前面的配置</li>\n<li>rules覆盖继承过来的配置，可以单独覆盖其等级，也可以同时覆盖其等级和配置项。如继承的配置是<code class=\"language-text\">&quot;quotes&quot;: [&quot;error&quot;, &quot;single&quot;, &quot;avoid-escape&quot;]</code>，<code class=\"language-text\">rules</code>中指定配置为<code class=\"language-text\">&quot;eqeqeq&quot;: &quot;warn&quot;</code>，则最终配置为<code class=\"language-text\">&quot;eqeqeq&quot;: [&quot;warn&quot;, &quot;allow-null&quot;]</code>，只覆盖其等级</li>\n</ul>\n<h5>配置继承的方式</h5>\n<ul>\n<li>继承自<code class=\"language-text\">eslint:recommended</code>，<code class=\"language-text\">eslint:recommended</code>内置了一系列<a href=\"https://eslint.org/docs/rules/\">核心规则</a>，这些核心规则只会在eslint主版本变更是会进行变动</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"extends\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>继承共享配置包。共享配置包指的是一个npm包，比如<code class=\"language-text\">eslint-config-standard</code>，它会导出一个配置文件，可以把它下载到本地eslint可以引用到的地方，然后通过<code class=\"language-text\">extends</code>继承配置包中的配置（此时可以忽略掉包名的<code class=\"language-text\">eslint-config-</code>前缀）</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"extends\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"standard\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>从插件继承。eslint插件，是一个npm包，里面通常会导出一系列规则。有些插件也会导出一个或多个命名配置。若需要继承插件的配置，则需要先安装插件到eslint可以引用到的地方。然后配置<code class=\"language-text\">plugins</code>字段和<code class=\"language-text\">extends</code>字段，<code class=\"language-text\">extends</code>字段格式为<code class=\"language-text\">plugins:packageName/configurationName</code>（<code class=\"language-text\">packageName</code>可以忽略<code class=\"language-text\">eslint-plugin-</code>前缀）</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"react\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"extends\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"eslint:recommended\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"plugin:react/recommended\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"rules\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token string\">\"no-set-state\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"off\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>继承自某个文件。</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"extends\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"./node_modules/coding-standard/eslintDefaults.js\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"./node_modules/coding-standard/.eslintrc-es6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>继承自<code class=\"language-text\">all</code>，配置方式为:<code class=\"language-text\">&quot;extends&quot;: &quot;eslint:all&quot;</code>。这会启用eslint中所有内置的核心规则。这些规则会跟随eslint的发版（包括小版本和大版本）而变化。不推荐在正式项目中用这个配置，因为这会导致再升级eslint后，eslint会针对原有代码进行报错。</li>\n</ul>\n<hr>\n<h4>.eslintignore</h4>\n<ul>\n<li>可以创建<code class=\"language-text\">.eslintignore</code>文件，通过正则的方式，指定不进行lint的文件</li>\n<li><code class=\"language-text\">node_modules</code>和<code class=\"language-text\">bower_components</code>默认忽略</li>\n</ul>","frontmatter":{"title":"eslint基础配置须知"}}},"pageContext":{"postName":"post/eslint基础配置须知"}}