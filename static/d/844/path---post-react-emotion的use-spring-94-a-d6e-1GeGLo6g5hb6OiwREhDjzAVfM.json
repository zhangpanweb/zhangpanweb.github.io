{"data":{"markdownRemark":{"html":"<p>先解释一个非常简单的示例，然后由这个示例引申到<code class=\"language-text\">useSpring</code>的使用及配置。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSpring<span class=\"token punctuation\">,</span> animated <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-spring'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> number <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>如上面的代码，会看到的动画是，数字由1变为0，且变化过程中，数字一直保持2为小数。</p>\n<p>useSpring配合<code class=\"language-text\">animated</code>使用，可以使元素从一个状态变为另外一个状态，如上面所示，初始状态 number为1，最终状态为number为0，元素进行了从初始状态到最终状态的变化，而这种变化是通过动画的形式展现的。</p>\n<hr>\n<h4>useSpring</h4>\n<h5>参数</h5>\n<p><code class=\"language-text\">useSpring</code>是一个React Hook。它定义了，动画的初始状态、最终状态以及一些变化参数。先看基本的，<code class=\"language-text\">useSpring</code>若接受一个对象为参数（实例中就是以对象为参数），则这个对象可以包含以下属性：</p>\n<ul>\n<li>\n<p><code class=\"language-text\">from</code>，表示初始状态</p>\n</li>\n<li>\n<p><code class=\"language-text\">to</code>，表示最终状态。需要注意的是，所有未在<code class=\"language-text\">react-spring</code>API 中指定的参数，都会被视为 <code class=\"language-text\">to</code>终止状态的数据。比如上面示例中<code class=\"language-text\">useSpring({ number: 0, from: { number: 1 } })</code>，number并不是API指定的配置参数，所以<code class=\"language-text\">number:0</code>是<code class=\"language-text\">to</code>的数据之一，也就是说，它等价于<code class=\"language-text\">useSpring({ to: { number: 0 }, from: { number: 1 } });</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">delay</code>，动画等待时间，如设置为1000，则动画会在等待1s后才执行</p>\n</li>\n<li>\n<p><code class=\"language-text\">immediate</code>，值为一个布尔值或者一个返回布尔值的函数，若布尔值为true或函数执行结果为true，则会从开始状态直接变为最终状态，而不执行动画</p>\n</li>\n<li>\n<p><code class=\"language-text\">reverse</code>，对调动画的最终状态和初始状态，只有当设置了<code class=\"language-text\">reset</code>为true时才有意义</p>\n</li>\n<li>\n<p><code class=\"language-text\">config</code>，动画配置。</p>\n<ul>\n<li>可配置项包括<code class=\"language-text\">duration</code>、<code class=\"language-text\">precision</code>、<code class=\"language-text\">easing</code>等参数。如上示例中，变为如下形式，则数字从1变为0会在3s钟内进行，动画会维持3s。全部可配置项可以参见<a href=\"https://www.react-spring.io/docs/hooks/api\">react-spring官网common-api的config</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> number <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> to<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> duration<span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>react-spring中预设了一部分配置项。这些配置项包括<code class=\"language-text\">default</code>、<code class=\"language-text\">gentle</code>等，可以使用以下方式进行引用</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> config <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-spring'</span>\n\n<span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>gentle <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><code class=\"language-text\">onStart</code>，当动画开始时，执行这个函数</p>\n</li>\n<li>\n<p><code class=\"language-text\">onFrame</code>，动画的每帧播放时调用，会传入此时的动画值，动画值见下面<code class=\"language-text\">useSpring</code>的返回值解释</p>\n</li>\n</ul>\n<h5>返回值</h5>\n<p><code class=\"language-text\">useSpring</code>的返回值是一个对象，这个对象的属性，是<code class=\"language-text\">useSpring</code>参数中的状态值。对象中的各状态值会随着动画的进行而变化。最开始的时候，此状态值是初始状态值；动画开始后，状态值变为动画状态对应的值；最终在动画结束时，此状态值变为最终状态。</p>\n<p>比如在上述示例中，采用了结构赋值，返回的实际值是一个 <code class=\"language-text\">{number:AnimatedValue}</code>，表示返回的是一个对象，这个对象有一个number属性，而number的值是一个对象，这个对象是<code class=\"language-text\">AnimatedValue</code>类型，它有一个<code class=\"language-text\">value</code>属性，其值为0。之后动画进行时，这个value值会随着动画状态变更，最终变为最终状态中的1</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> number <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>函数参数</h5>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSpring<span class=\"token punctuation\">,</span> animated <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-spring'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> number <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">,</span> stop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>reverse<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面代码实现的效果是：页面加载后，数字0会使用动画变为1，此时点击reverse按钮，数字又会由1以动画形式变为0，再次点击reverse，则又会变为1。</p>\n<p>如上面代码所示：</p>\n<ul>\n<li><code class=\"language-text\">useSpring</code>可以接受一个函数作为参数，这个函数的的返回值是一个对象，此对象是上面已经讲述过的那个，可以有from、to等参数</li>\n<li>当<code class=\"language-text\">useSpring</code>接受函数为参数时，它的返回值是一个数组，上面采用了解构赋值的方式，数组中包含三个值，第一个返回值和上面<code class=\"language-text\">useSpring</code>接受对象时的返回值相同，第二个返回值是一个set函数，第三个返回值是一个stop函数</li>\n<li>set函数，可以接受一个对象，它和React原生的<code class=\"language-text\">setState</code>很相似，可以将动画状态至为某个指定状态(这个指定状态就是调用set函数时的入参)，调用set函数后，react-spring会按照<code class=\"language-text\">useSpring</code>中指定的动画配置，将元素以动画的形式变为指定状态。</li>\n<li>stop函数可以使动画停止</li>\n</ul>\n<hr>\n<h4>interpolate</h4>\n<p>interpolate的作用是，设定动画的呈现：</p>\n<ul>\n<li>interpolate可以接受一个函数，这个函数的返回值，会被用作效果呈现，比如上面例子中，接受了一个函数<code class=\"language-text\">n=&gt;n.toFixed(2)</code>，则，每个number值在呈现的时候，都只会取两位小数</li>\n<li>interpolate可以接受两个数组，此时第一个数组表示的是时间线，第二数组是对应的输出，比如 <code class=\"language-text\">number.interpolate([0,0.5,1],[0,1.9.2])</code>，它表示的是，动画执行时，0时刻，应该输出0；中间时刻点应该输出1.9；到最终动画中点，应该是2。此时第二个数组的输出，也就是对应时刻，动画应该在的状态。</li>\n<li>interpolate也可以接受一个对象，这个对象包括<code class=\"language-text\">range</code>、<code class=\"language-text\">output</code>、<code class=\"language-text\">extrapolate</code>等属性</li>\n</ul>\n<p>interpolate也可以串联使用，比如</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">number\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>此时由<code class=\"language-text\">.interpolate([0, 0.5, 1], [2, 1.9, 0])</code>输出的值会作为<code class=\"language-text\">.interpolate(n =&gt; n.toFixed(2))</code>的输入，经过取两位小数再进行输出。</p>\n<hr>\n<h4>异步动画/动画链</h4>\n<h5>异步动画</h5>\n<p>useSpring的to属性可以接受一个异步函数作为参数，在此异步函数中可以执行异步动画，比如下面的例子中，会等到接口请求返回才执行动画，每次next的时候回next出一个动画状态，然后会执行动画，将元素状态置为这个状态</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSpring<span class=\"token punctuation\">,</span> animated <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-spring'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> fetch <span class=\"token keyword\">from</span> <span class=\"token string\">'cross-fetch'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> number <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    to<span class=\"token punctuation\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">,</span> cancel<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.reddit.com/r/reactjs.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<h5>链式动画</h5>\n<p>to 可以被指定为状态组成的数组，此时会从左往右，执行动画依次进行状态变更。如下面，会先变为1，然后再变为2</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> number <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSpring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    to<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> number<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">interpolate</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">=></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>animated<span class=\"token punctuation\">.</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"react-emotion的useSpring"}}},"pageContext":{"postName":"post/react-emotion的useSpring"}}