{"data":{"markdownRemark":{"html":"<h5>不使用 JSX</h5>\n<p>直接在页面中以 script 的方式引用react和 react-dom 的 CND 代码</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">crossorigin</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>此时，无法解析 JSX，故需要使用 React.createElement 的方式来创建组件，具体示例可见：<a href=\"https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605\">https://gist.github.com/gaearon/6668a1f6986742109c00a581ce704605</a></p>\n<hr>\n<h5>直接在页面中使用 JSX</h5>\n<p>在页面上引用 babel的包代码</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/babel-standalone@6/babel.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>在 html页面的 JS 代码中将 script 的 type 置为 <code class=\"language-text\">type=&quot;text/babel&quot;</code>，JS 代码写在这个特殊 script 中</p>\n<p>在这种方式下：</p>\n<p>1、此时无法通过这个 script 引用外部 JS 文件，因为设置 type 后这个 script 已经不是一个作用为引用 JS 的script 标签了</p>\n<p>2、JSX 的编译发生在浏览器中，所以页面加载速度慢，所以它不适合用在生产环境中</p>\n<hr>\n<h5>实时编译 JSX</h5>\n<p>安装 babel-cli@6 和 babel-preset-react-app@3，通过 babel --watch 的功能进行实时编译，将文件编译为浏览器可以直接执行的文件，html 中直接引用编译后的文件</p>","frontmatter":{"title":"不打包的情况下使用React"}}},"pageContext":{"postName":"1-不打包的情况下使用React"}}