{"data":{"markdownRemark":{"html":"<p>开发环境中，如果在更新代码后，浏览器能够自动刷新，能够很大程度上提升我们的开发效率。在此记录一下，以<code class=\"language-text\">webpack-dev-server</code>和<code class=\"language-text\">express</code>两者提供服务的情况下，如何设置浏览器自动刷新。</p>\n<hr>\n<h4>webpack-dev-server</h4>\n<p>在<code class=\"language-text\">webpack-dev-server</code>提供服务的情况下，浏览器自动刷新的设置相当简单，只需要在<code class=\"language-text\">webpack.config.js</code>中加入以下代码即可：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\ndevServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    contentBase<span class=\"token punctuation\">:</span> <span class=\"token string\">'./views'</span><span class=\"token punctuation\">,</span>\n    publicPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>相关<code class=\"language-text\">contentBase</code>和<code class=\"language-text\">publicPath</code>参数值可以按照需要进行设置，可参考<a href=\"https://webpack.js.org/guides/development/#using-webpack-dev-middleware\">webpack官网devServer配置项</a></p>\n<hr>\n<h4>以 express 提供服务</h4>\n<p>若以express提供服务，则需要使用<code class=\"language-text\">webpack-dev-middleware</code>和<code class=\"language-text\">webpack-hot-middleware</code>模块进行配置。首先</p>\n<h5>安装模块</h5>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev webpack-dev-middleware webpack-hot-middleware</code></pre></div>\n<h5>webpack配置</h5>\n<p>在 webpack 中添加配置</p>\n<ul>\n<li>entry 配置增加对<code class=\"language-text\">webpack-hot-middleware/client</code>的引用</li>\n<li>output 配置中增加<code class=\"language-text\">publicPath</code>配置</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">entry<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'webpack-hot-middleware/client?reload=true'</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./entry/index.jsx'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\noutput<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">,</span>\n    publicPath<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h5>express 增加中间件</h5>\n<p>增加对<code class=\"language-text\">webpack-dev-middleware</code>和<code class=\"language-text\">webpack-hot-middleware</code>的使用：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./webpack.config'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> compiler <span class=\"token operator\">=</span> <span class=\"token function\">webpack</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webpack-dev-middleware\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>compiler<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  noInfo<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> publicPath<span class=\"token punctuation\">:</span> config<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>publicPath\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webpack-hot-middleware\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>compiler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5>reload 选项</h5>\n<p><code class=\"language-text\">webpack-hot-middleware/client</code>可以配置<a href=\"https://github.com/webpack-contrib/webpack-hot-middleware#config\">很多选项</a>，其中可以关注一下<code class=\"language-text\">reload</code>的参数。由于<code class=\"language-text\">webpack-hot-middleware</code>的主要目的是做热替换的。但是在某些项目中，比如React项目，单纯的<code class=\"language-text\">webpack-dev-middleware</code>和<code class=\"language-text\">webpack-hot-middleware</code>模块无法达到热替换的目的，设置<code class=\"language-text\">reload=true</code>会在当 webpack 检测到文件更新，但是无法完成热替换时，将替换方案退化为，重新刷新浏览器。</p>\n<hr>\n<h4>更多</h4>\n<p>热替换是比刷新浏览器更好的体验，React 的热替换可以参考：</p>\n<ul>\n<li><a href=\"https://github.com/gaearon/react-hot-loader\">react-hot-load</a></li>\n<li><a href=\"https://mobile.twitter.com/dan_abramov\">Dan Abramov</a> 有关热替换的文章：<a href=\"https://overreacted.io/my-wishlist-for-hot-reloading/\">my-wishlist-for-hot-reloading</a></li>\n</ul>","frontmatter":{"title":"开发环境设置浏览器自动刷新"}}},"pageContext":{"postName":"post/开发环境设置浏览器自动刷新"}}