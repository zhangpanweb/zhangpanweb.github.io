{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","Container","Object","styled_base_browser_esm","target","name","styles","Title","Description","header","core_browser_esm","layout","_ref","children","pageTitle","react_default","a","Fragment","Helmet","charSet","layout_Container","titleContainerCss","Date","PostLink","node","key","id","gatsby_link_default","to","fields","postName","css","pages_Title","frontmatter","title","pages_Date","date","pages_Description","description","query","__webpack_exports__","_ref2","posts","data","allMarkdownRemark","edges","map","post","pages_PostLink","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","propTypes","shape"],"mappings":"6KAY2BA,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,kBCtDhBC,EAAYC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,uBAITC,EAAQL,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,wBAILE,EAAcN,OAAAC,EAAA,EAAAD,CAAA,QAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,6CAKFG,EAAA,kBACbP,OAAAQ,EAAA,EAAAR,CAACD,EAAD,KACEC,OAAAQ,EAAA,EAAAR,CAACK,EAAD,aACAL,OAAAQ,EAAA,EAAAR,CAACM,EAAD,gCCbEP,EAAYC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,kEAOAK,EAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,UAAb,OACbZ,OAAAQ,EAAA,EAAAR,CAACa,EAAAC,EAAMC,SAAP,KACEf,OAAAQ,EAAA,EAAAR,CAACgB,EAAA,OAAD,KACEhB,OAAAQ,EAAA,EAAAR,CAAA,QAAMiB,QAAQ,UACdjB,OAAAQ,EAAA,EAAAR,CAAA,aAAQY,IAEVZ,OAAAQ,EAAA,EAAAR,CAACkB,EAAD,KACElB,OAAAQ,EAAA,EAAAR,CAACO,EAAD,MACCI,yCCdP,IAAMQ,EAAiB,CAAAhB,KAAA,UAAAC,OAAA,sHAYjBC,EAAQL,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,4CAKLgB,EAAOpB,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,0CAKJE,EAAcN,OAAAC,EAAA,EAAAD,CAAA,KAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,wCAKXiB,EAAW,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,KAAH,OACftB,OAAAQ,EAAA,EAAAR,CAAA,OAAKuB,IAAKD,EAAKE,IACbxB,OAAAQ,EAAA,EAAAR,CAACyB,EAAAX,EAAD,CAAMY,GAAIJ,EAAKK,OAAOC,SAAUC,IAAKV,GACnCnB,OAAAQ,EAAA,EAAAR,CAAC8B,EAAD,KAAQR,EAAKS,YAAYC,OACzBhC,OAAAQ,EAAA,EAAAR,CAACiC,EAAD,KAAOX,EAAKS,YAAYG,MACxBlC,OAAAQ,EAAA,EAAAR,CAACmC,EAAD,KAAcb,EAAKS,YAAYK,gBAcxBC,GATEC,EAAA,iBAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACGC,kBAAkBC,MACrC,OACE3C,OAAAQ,EAAA,EAAAR,CAACS,EAAD,CAAQG,UAAU,QACf4B,EAAMI,IAAK,SAAAC,GAAI,OAAI7C,OAAAQ,EAAA,EAAAR,CAAC8C,EAAD,CAAUvB,IAAKsB,EAAKvB,KAAKE,GAAIF,KAAMuB,EAAKvB,WAKhD,mCCrDlB,IAAsByB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAA1C,GAAkB,IAAf2C,EAAe3C,EAAf2C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOjE,IAAMkE,cAAcC,IAApB3D,OAAA4D,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBU,UAAY,CAC3BT,SAAU3D,IAAUqE,MAAM,CACxBN,SAAU/D,IAAUE,OAAOC,aAC1BA,YAGUuD","file":"component---src-pages-index-js-59b7ce528573838ade8d.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 30px;\n`;\n\nconst Description = styled.span`\n  display: inline-block;\n  margin-bottom: 50px;\n`;\n\nexport default () => (\n  <Container>\n    <Title>渊虹小站</Title>\n    <Description>Have life, have code.</Description>\n  </Container>\n)","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Helmet } from \"react-helmet\";\n\nimport Header from './header';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 770px;\n  margin-top: 50px;\n  padding: 0 20px;\n`;\n\nexport default ({ children, pageTitle }) => (\n  <React.Fragment>\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>{pageTitle}</title>\n    </Helmet>\n    <Container>\n      <Header />\n      {children}\n    </Container>\n  </React.Fragment>\n\n)\n","import React from \"react\";\nimport { Link, graphql } from 'gatsby';\nimport styled from '@emotion/styled';\nimport {css} from '@emotion/core';\n\nimport Layout from '../components/layout';\n\nconst titleContainerCss = css`\n  display: block;\n  \n  text-decoration: none;\n  color: black;\n\n  padding: 30px;\n  background: white;\n  border-radius: 5px;\n  margin-bottom: 25px;\n`;\n\nconst Title = styled.h3`\n  display: inline-block;\n  margin-right: 30px;\n`;\n\nconst Date = styled.h5`\n  display: inline-block;\n  margin-top:20px;\n`;\n\nconst Description = styled.p`\n  margin: 10px 0 10px;\n  line-height: 2.0;\n`;\n\nconst PostLink = ({ node }) => (\n  <div key={node.id}>\n    <Link to={node.fields.postName} css={titleContainerCss}>\n      <Title>{node.frontmatter.title}</Title>\n      <Date>{node.frontmatter.date}</Date>\n      <Description>{node.frontmatter.description}</Description>\n    </Link>\n  </div>\n)\n\nexport default ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout pageTitle=\"渊虹小站\">\n      {posts.map((post => <PostLink key={post.node.id} node={post.node} />))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort:{fields:frontmatter___date,order:DESC}){\n      edges{\n        node{\n          id\n          frontmatter{\n            title\n            date\n            description\n          }\n          html\n          fields{\n            postName\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}