{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostTitle","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","__webpack_exports__","_ref","post","data","markdownRemark","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","hideHeader","pageTitle","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","Container","styled_base_browser_esm","Title","Description","header","core_browser_esm","children","react_default","a","Fragment","Helmet","charSet","layout_Container"],"mappings":"yKAMMA,EAAYC,OAAAC,EAAA,EAAAD,CAAA,MAAHE,OAAA,YAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,wBAIAC,EAAA,iBAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACEC,eAClB,OACET,OAAAU,EAAA,EAAAV,CAACW,EAAA,EAAD,CAAQC,YAAY,EAAMC,UAAU,QAClCb,OAAAU,EAAA,EAAAV,CAACD,EAAD,KAAYQ,EAAKO,YAAYC,OAC7Bf,OAAAU,EAAA,EAAAV,CAAA,OAAKgB,wBAAyB,CAAEC,OAAQV,EAAKW,UAK5C,IAAMC,EAAK,4FCjBZC,EAAYpB,OAAAqB,EAAA,EAAArB,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,qDAKTkB,EAAQtB,OAAAqB,EAAA,EAAArB,CAAA,MAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,wBAILmB,EAAcvB,OAAAqB,EAAA,EAAArB,CAAA,QAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,oEAMFoB,EAAA,kBACbxB,OAAAyB,EAAA,EAAAzB,CAACoB,EAAD,KACEpB,OAAAyB,EAAA,EAAAzB,CAACsB,EAAD,aACAtB,OAAAyB,EAAA,EAAAzB,CAACuB,EAAD,gCCfEH,EAAYpB,OAAAqB,EAAA,EAAArB,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAG,KAAA,SAAAC,OAAA,kEAOAC,EAAA,WAAAC,GAAA,IAAGoB,EAAHpB,EAAGoB,SAAUd,EAAbN,EAAaM,WAAYC,EAAzBP,EAAyBO,UAAzB,OACbb,OAAAyB,EAAA,EAAAzB,CAAC2B,EAAAC,EAAMC,SAAP,KACE7B,OAAAyB,EAAA,EAAAzB,CAAC8B,EAAA,OAAD,KACE9B,OAAAyB,EAAA,EAAAzB,CAAA,QAAM+B,QAAQ,UACd/B,OAAAyB,EAAA,EAAAzB,CAAA,aAAQa,IAEVb,OAAAyB,EAAA,EAAAzB,CAACgC,EAAD,KACIpB,EAA0B,KAAbZ,OAAAyB,EAAA,EAAAzB,CAACwB,EAAD,MACdE","file":"component---src-templates-post-js-aa00ee603d9de844f442.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Layout from '../components/layout';\n\nconst PostTitle = styled.h2`\n  margin-bottom: 50px;\n`;\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  return (\n    <Layout hideHeader={true} pageTitle=\"渊虹小站\">\n      <PostTitle>{post.frontmatter.title}</PostTitle>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($postName:String!) {\n    markdownRemark(fields:{postName:{eq:$postName}}){\n      html\n      frontmatter{\n        title\n      }\n    }\n  }\n`","import React from 'react';\nimport styled from '@emotion/styled';\n\nconst Container = styled.div`\n  text-align: center;\n  border-bottom: 1px solid black;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 10px;\n`;\n\nconst Description = styled.span`\n  display: inline-block;\n  margin-bottom: 20px;\n  font-family: 'Consolas';\n`;\n\nexport default () => (\n  <Container>\n    <Title>渊虹小站</Title>\n    <Description>Have life, have code.</Description>\n  </Container>\n)","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Helmet } from \"react-helmet\";\n\nimport Header from './header';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  max-width: 770px;\n  margin-top: 50px;\n  padding: 0 20px;\n`;\n\nexport default ({ children, hideHeader, pageTitle }) => (\n  <React.Fragment>\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>{pageTitle}</title>\n    </Helmet>\n    <Container>\n      {!hideHeader ? <Header /> : null}\n      {children}\n    </Container>\n  </React.Fragment>\n\n)\n"],"sourceRoot":""}